// Generated by view binder compiler. Do not edit!
package com.aisc.ngalo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.aisc.ngalo.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class BikerepairBottomSheetBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final ImageView bikeImageView;

  @NonNull
  public final LinearLayout bottomSheet;

  @NonNull
  public final CoordinatorLayout coordinatorLayout;

  @NonNull
  public final EditText repairDescriptionEditText;

  @NonNull
  public final Button requestRepairButton;

  @NonNull
  public final EditText userLocationEditText;

  private BikerepairBottomSheetBinding(@NonNull CoordinatorLayout rootView,
      @NonNull ImageView bikeImageView, @NonNull LinearLayout bottomSheet,
      @NonNull CoordinatorLayout coordinatorLayout, @NonNull EditText repairDescriptionEditText,
      @NonNull Button requestRepairButton, @NonNull EditText userLocationEditText) {
    this.rootView = rootView;
    this.bikeImageView = bikeImageView;
    this.bottomSheet = bottomSheet;
    this.coordinatorLayout = coordinatorLayout;
    this.repairDescriptionEditText = repairDescriptionEditText;
    this.requestRepairButton = requestRepairButton;
    this.userLocationEditText = userLocationEditText;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static BikerepairBottomSheetBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BikerepairBottomSheetBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.bikerepair_bottom_sheet, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BikerepairBottomSheetBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bikeImageView;
      ImageView bikeImageView = ViewBindings.findChildViewById(rootView, id);
      if (bikeImageView == null) {
        break missingId;
      }

      id = R.id.bottomSheet;
      LinearLayout bottomSheet = ViewBindings.findChildViewById(rootView, id);
      if (bottomSheet == null) {
        break missingId;
      }

      CoordinatorLayout coordinatorLayout = (CoordinatorLayout) rootView;

      id = R.id.repairDescriptionEditText;
      EditText repairDescriptionEditText = ViewBindings.findChildViewById(rootView, id);
      if (repairDescriptionEditText == null) {
        break missingId;
      }

      id = R.id.requestRepairButton;
      Button requestRepairButton = ViewBindings.findChildViewById(rootView, id);
      if (requestRepairButton == null) {
        break missingId;
      }

      id = R.id.userLocationEditText;
      EditText userLocationEditText = ViewBindings.findChildViewById(rootView, id);
      if (userLocationEditText == null) {
        break missingId;
      }

      return new BikerepairBottomSheetBinding((CoordinatorLayout) rootView, bikeImageView,
          bottomSheet, coordinatorLayout, repairDescriptionEditText, requestRepairButton,
          userLocationEditText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
